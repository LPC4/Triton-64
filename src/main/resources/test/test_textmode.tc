func main() {
    var screenWidth = 80
    var screenHeight = 30

    var framebufferBase = 0x20220000
    var framebufferSize = screenWidth * screenHeight

    var mmioBase = 0x20020000
    var queueHeadOffset = 0x08

    var cursorIndex = 0

    while (1) {
        var inputChar = @(mmioBase + queueHeadOffset)

        if (inputChar != 0xFF) {
            cursorIndex = handleInput(inputChar, cursorIndex, framebufferBase, framebufferSize, screenWidth)
            confirmInputProcessed()
        }
    }
}

func handleInput(char, cursorIndex, framebufferBase, framebufferSize, screenWidth) {
    if (char == 10) { ; newline
        cursorIndex = handleNewline(cursorIndex, framebufferSize, screenWidth)
    }

    if (char == 8) { ; backspace
        cursorIndex = handleBackspace(cursorIndex, framebufferBase)
    }

    if (char != 10 && char != 8) { ; normal character
        cursorIndex = handleNormalChar(char, cursorIndex, framebufferBase, framebufferSize)
    }

    return cursorIndex
}

func handleNewline(cursorIndex, framebufferSize, screenWidth) {
    cursorIndex = ((cursorIndex / screenWidth) + 1) * screenWidth
    if (cursorIndex >= framebufferSize) {
        cursorIndex = 0
    }
    return cursorIndex
}

func handleBackspace(cursorIndex, framebufferBase) {
    if (cursorIndex > 0) {
        cursorIndex = cursorIndex - 1
        var addr = framebufferBase + cursorIndex * 4
        writeChar(addr, 0)
    }
    return cursorIndex
}

func handleNormalChar(char, cursorIndex, framebufferBase, framebufferSize) {
    if (cursorIndex < framebufferSize) {
        var addr = framebufferBase + cursorIndex * 4
        writeChar(addr, char)
        cursorIndex = cursorIndex + 1
    }
    return cursorIndex
}

func writeChar(addr, char) {
    var fgColor = 0xF
    var bgColor = 0

    @addr = char
    @(addr + 1) = fgColor
    @(addr + 2) = bgColor
    @(addr + 3) = 0
}

func confirmInputProcessed() {
    var mmioBase = 0x20020000
    var queueControlOffset = 0x0C
    @(mmioBase + queueControlOffset) = 1
}
