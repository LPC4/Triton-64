struct ColorChar {
    var ch: byte
    var fg: byte
    var bg: byte
    var reserved: byte
}

global SCREEN_WIDTH: int = 80
global SCREEN_HEIGHT: int = 30
global FRAMEBUFFER_BASE: long = 0x20220000
global console_cursor: int = 0  ; Character index (0 to SCREEN_WIDTH*SCREEN_HEIGHT-1)

func console_init() {
    console_cursor = 0
    console_clear()
}

func console_clear() {
    var i: int = 0
    var total_chars: int = SCREEN_WIDTH * SCREEN_HEIGHT
    var fb: long = FRAMEBUFFER_BASE  ; Raw byte address

    while (i < total_chars) {
        var cell: ColorChar* = ColorChar*(fb + (i * 4))
        cell.ch = 32    ; space
        cell.fg = 0xF   ; white
        cell.bg = 0     ; black
        cell.reserved = 0
        i = i + 1
    }
    console_cursor = 0
}

func console_scroll() {
    var fb: long = FRAMEBUFFER_BASE  ; Raw byte address
    var row: int = 0

    while (row < SCREEN_HEIGHT - 1) {
        var col: int = 0
        while (col < SCREEN_WIDTH) {
            var src_index: int = (row + 1) * SCREEN_WIDTH + col
            var dst_index: int = row * SCREEN_WIDTH + col

            var src: ColorChar* = ColorChar*(fb + (src_index * 4))
            var dst: ColorChar* = ColorChar*(fb + (dst_index * 4))

            dst.ch = src.ch
            dst.fg = src.fg
            dst.bg = src.bg
            dst.reserved = src.reserved

            col = col + 1
        }
        row = row + 1
    }

    var col: int = 0
    while (col < SCREEN_WIDTH) {
        var index: int = (SCREEN_HEIGHT - 1) * SCREEN_WIDTH + col
        var cell: ColorChar* = ColorChar*(fb + (index * 4))
        cell.ch = 32
        cell.fg = 0xF
        cell.bg = 0
        cell.reserved = 0
        col = col + 1
    }
}

func console_putc(char: byte) {
    var fb: long = FRAMEBUFFER_BASE  ; Raw byte address

    if (char == 10) { ; newline
        var row: int = console_cursor / SCREEN_WIDTH
        if (row >= SCREEN_HEIGHT - 1) {
            console_scroll()
            console_cursor = (SCREEN_HEIGHT - 1) * SCREEN_WIDTH
        } else {
            console_cursor = (row + 1) * SCREEN_WIDTH
        }
        return
    }

    if (console_cursor >= SCREEN_WIDTH * SCREEN_HEIGHT) {
        console_scroll()
        console_cursor = (SCREEN_HEIGHT - 1) * SCREEN_WIDTH
    }

    var cell: ColorChar* = ColorChar*(fb + (console_cursor * 4))
    cell.ch = char
    cell.fg = 0xF
    cell.bg = 0
    cell.reserved = 0

    console_cursor = console_cursor + 1
}

func console_puts(str: long, len: int) {
    var i: int = 0
    while (i < len) {
        console_putc(byte@(str + i))
        i = i + 1
    }
}

func print(str: long, len: int) {
    console_puts(str, len)
}

func println(str: long, len: int) {
    print(str, len)
    console_putc(10)
}

func print_raw(ptr: long, len: int) {
    console_puts(ptr, len)
}